#!/usr/bin/env python3
import sys
import getopt

lib_path = os.getcwd() + "/../lib/backend"
sys.path.append( lib_path )
from util import Log 

#generiert ein Manifest f√ºr Compontent
opt = "f:d:vx"
long_opt = ["file=", "folder=", "version", "verbose", "doxygen" ]
max_output_level = 2

def usage():
    print("Usage:", sys.argv[0], """[-f <file>| --file=<file> 
         \t [-d <folder> --folder=<folder>]
         \t [-v | --verbose]
         \t [--version]
         \t [-x | --doxygen] """)
         
def main():
    Log.setHandler = Log.handlerActivation(Log.setHandler)
    try:
         opts, args = getopt.getopt(sys.argv[1:], opt, long_opt)
    except getopt.GetoptError as err:
        print(err)
        usage()
        sys.exit(2)
    output = None
    verbose = 0
    
    for o, a in opts:
        if o in ("-f", "--file"):
            pass
        elif o in ("-d", "--folder"):
            pass
        elif o in ("-x", "--doxygen"):
            Log.critical("Not implementet yet!")
        elif o in ("-v", "--verbose"):
            Log.increase_verbosity()
        elif o == "version":
            usage()

if __name__ == "__main__":
    main()            
