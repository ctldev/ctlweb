#!/usr/bin/env python3
import sys
import socket
from datetime import date
import re
from subprocess import call

USER_MODE = {
        'add': 0,
        'remove' : 1,
        }
SIMULATE = False

def main():
    """ Evaluates userinput and directs input to backend command
    """
    global SIMULATE
    head_msg = "Welcome to the %s interace for CTL-Webfrontends" \
            % socket.gethostname()
    head_line = ''
    for char in head_msg:
        head_line += '='
    print(head_msg)
    print(head_line)
    print()
    print("You are able to switch to the upper menu at all time with 'b'")

    while True:
        print("""
            1) send me your components
            2) add one of my users
            3) remove one of my users
            s) set simulate mode (Debugging)
            q) Quit
Choose your action: """, end='')
        mode = sys.stdin.readline().strip().lower()
        if mode == '1':
            try:
                component_request()
            except UserBack:
                continue
        elif mode == '2':
            try:
                user(USER_MODE['add'])
            except UserBack:
                continue
        elif mode == '3':
            try:
                user(USER_MODE['remove'])
            except UserBack:
                continue
        elif mode == 's':
            print("Simulate mode set")
            SIMULATE = True
        elif mode == 'q':
            print("Goodbye")
            exit(0)
        else:
            print("Unknown option, please retry.")


def component_request():
    time_index = None   # Timerange of components to get
    while True:         # Get all components?
        print("Do you wish to get all components?(y/N)")
        mode = sys.stdin.readline().strip().lower()
        if mode == 'n':
            try:
                time_index = _get_timeindex()
                break
            except UserBack:
                continue
        elif mode == 'y':
            break
        elif mode == 'b':
            raise UserBack()
        else:
            print("Unknown option, please retry.")
    while True:         # Get the private url
        print("Please enter the private url as upload path: ")
        url = sys.stdin.readline().strip()  #TODO validate url
        if url == 'b':
            raise UserBack()
        elif url != '':
            break
    opts = []
    if time_index:  # User want a subset of components
        opts.append(" -t %s-%s-%s " % time_index)
    opts.append(" --get")
    opts.append(" --url=%s" % url)
    cmd = ["ctl-component"]
    cmd.extend(opts)
    if SIMULATE: # TODO read correct SIMULATE
        print("SIMULATE: %s" % cmd)
        return
    call(cmd)
    print("done.")


def user(mode):
    if mode == USER_MODE['add']:
        print("Add a new user")
        print("--------------")
    elif mode == USER_MODE['remove']:
        print("Remove a user")
        print("-------------")
    user_name = None
    user_key = None
    while True:
        print("Please enter the username: ")
        user_name = sys.stdin.readline().strip()
        if user_name == 'd':
            print("Going menu up!")
            raise UserBack()
        elif re.match("\w*",user_name):
            break
        else:
            print("User has to be [a-zA-Z_0-9] only. Please retry")
    while True:
        if mode == USER_MODE['remove']: # no need for public key
            break
        print("Please enter the users public key: ")
        public_key = sys.stdin.readline().strip()
        if public_key == 'b':
            raise UserBack()
        elif public_key != '':
            print("Done")
            break
    cmd = ["ctl-register"]
    if mode == USER_MODE['add']:
        cmd.append(" --add='%s'" % user_name)
        cmd.append(" --key='%s'" % user_key)
    elif mode == USER_MODE['remove']:
        cmd.append(" --remove='%s'" % user_name)
    if SIMULATE:
        print("SIMULATE: %s" % cmd)
        return
    call(cmd)


def _get_timeindex():
    """ Validates the user given date format.
    
    Returns date if date is valid
    """
    while True:
        print("""Please enter a date from which on you want to receive new
        components. (YYYY-MM-DD): """)
        input_date = sys.stdin.readline().strip().lower()
        try:
            year, month, day = re.match("([\d]{4})-([\d]{2})-([\d]{2})",
                    input_date).groups()
            year = int(year)
            month = int(month)
            day = int(day)
        except AttributeError:
            if input_date == 'b':
                raise UserBack()
            print("Unknown format, Please try again.")
            print()
            continue
        try:
            date(year, month, day)
            return (year, month, day)
        except ValueError:
            print()
            print("Invalid day. Please try again.")


class UserBack(Exception):
    pass

if __name__ == '__main__':
    main()
