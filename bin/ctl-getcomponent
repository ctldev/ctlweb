#!/usr/bin/env python3
#Returns registered component of server to web

from os.path import abspath, dirname
import sys
import getopt
import requests

lib_path = dirname(abspath(__file__)) + "/../lib/backend"
sys.path.append(lib_path)
from log import Log
from database.database import Database 
from database.web import Web



opt = "t:au:k:v:c:"
long_opt = ["version", "verbose=", "timestamp=", "all", "url=", "key=" ]
max_output_level = 2

def usage():
    print("Usage:", sys.argv[0], """[-t <timestamp>|--timestamp=<timestamp>]
         \t [-a|--all]
         \t [-u <push-url>|--url=<push-url>]
         \t [-k <pub-key>|--key=<pub-key>]
         \t [-c <ctlconfig-path>]
         \t [-v | --verbose]
         \t [--version]""")
         
def main():
    try:
         opts, args = getopt.getopt(sys.argv[1:], opt, long_opt)
         
    except getopt.GetoptError as err:
        print(err)
        usage()
        sys.exit(2)

    import configparser

    """defaultpath für config_file"""
    config_file = '/etc/ctlweb.conf'

    key = None
    url = None
    components = []
    
    for o, a in opts:
        if o in ("-t", "--timestamp"):
            Log.debug("retrieve components from database")
            components = Database.get(a)
            

        elif o in ("-a", "--all"):
            Log.debug("retrieve components from database")
            components = Database.get()

        elif o in ("-u", "--url"):
            Log.debug("set url")
            url = a

        elif o in ("-k", "--key"):
            Log.debug("set public-key")
            key = a

        elif o == "-c":
            if(a != None):

                config_file = a

        elif o == "--version":
            
            #TODO get version

            print("ctl version beta 1")
            sys.exit()

        elif o in ("--verbose","-v"):
            Log.increase_verbosity()
    
    """config-file auslesen"""
    config = configparser.ConfigParser()
    config.read(config_file)


    """Check ob URL und Key gesetzt wurden"""
    if(key == None or url == None):
        
        raise ValueError("No URL set or no given Key")
    
    else:
        
        Log.debug("check public-key")
        domain = url[url.index(".") + 1 :]
        domain = domain[0 : domain.index(".")]

        pubkey = Web.get_exact(domain)
        
        Log.debug("send postdata to url")
        if(pubkey == key):
            i = 0
            while(i < components.length()):
                files = {'manifest': (config['manifest_storage'] + components[i] +'.tgz')}
                requests.post(url, files=files)
                i += 1

        else:

            raise ValueError("wrong public-key")

    """Alles ordnungsgemäß durchgelaufen"""
    return 0

if __name__ == "__main__":
    main()            
            
