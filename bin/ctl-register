#!/usr/bin/env python3
import argparse

from util import Log
from util.parsing import commit_settings
from util.parsing import parent_parser
from database.database import NoSuchTable
from database.user import User

# NICE TO HAVE: Overview and remove users of ctlweb frontend
#


def add(args):
    """ Adds a ctl-web frontend user to the Database and grants it access to
        * ctl-init
    """
    user = User.add({'c_id': args.user,
                    'f_Pubkey_pubkey': args.key})
    try:
        user.save()
    except NoSuchTable:
        user.create_table()
        user.save()


def remove(args):
    try:
        user = User.get_exacly(args.user)
    except NoSuchTable:
        user = None
    if user:
        user.remove()
    else:
        Log.error('%s was not found in Database' % args.user)


def overview(args):
    line_width = 79
    table_template = '%-35s| %-42s'
    heading = 'Registred ctlweb users'.center(line_width)
    heading_sub = '--==========================--'.center(line_width)
    users = []
    try:
        users = User.get(args.timestamp)
    except NoSuchTable:
        users = []
    print()
    print(heading)
    print(heading_sub)
    print()
    if users:
        print(table_template % ('Username', 'Key'))
        print('-' * line_width)
    elif args.timestamp:
        print('No ctlweb users in timerange added')
    else:
        print('No ctlweb users registered')

    for u in users:
        pubkeys = [k.c_key for k in u.get_keys()]
        print(table_template % (u.c_id, ', '.join(pubkeys)))


def main():
    parser = argparse.ArgumentParser(description='Manages access for ctlweb'
                                                 + ' users',
                                     parents=[parent_parser])
    subparser = parser.add_subparsers(help='Actions that can be done')
      ####################
     # ctl-register add #
    ####################
    add_parser = subparser.add_parser('add',
                                      parents=[parent_parser],
                                      help='Grant access for ctlweb user.'
                                      + ' This command can also be used to'
                                      + ' change a ctlweb user.')
    add_parser.add_argument('user',
                            metavar='USER',
                            help='Name of the ctlweb user.')
    add_parser.add_argument('--key', '-k', required=True,
                            help='Public key of the ctlweb user.')
    add_parser.set_defaults(func=add)
      #######################
     # ctl-register remove #
    #######################
    remove_parser = subparser.add_parser('remove',
                                         parents=[parent_parser],
                                         help='Revoke access for ctlweb user.')
    remove_parser.add_argument('user',
                               metavar='USER',
                               help='Name of the ctlweb user.')
    remove_parser.set_defaults(func=remove)
      #########################
     # ctl-register overview #
    #########################
    overview_parser = subparser.add_parser('overview',
                                           parents=[parent_parser],
                                           help='View registered ctlweb users.'
                                           )
    overview_parser.add_argument('--timestamp', '-t',
                                 help='Show only ctlweb user newer than'
                                 + ' timestamp')
    overview_parser.set_defaults(func=overview)
    # Workaround for Python 3.2-3.4 Issue #9694 'optional arguments'
    parser._optionals.title = 'options'
    add_parser._optionals.title = 'options'
    remove_parser._optionals.title = 'options'

    args = parser.parse_args()
    commit_settings(args)
    if 'func' in args:
        args.func(args)
    else:
        parser.print_help()


if __name__ == "__main__":
    main()
