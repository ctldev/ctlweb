#!/usr/bin/env python3
import os
import sys
import getopt

#ctl-web wird von der Webinstanz auf den Cluster ausgefuehrt, um sich dort zu verifiziern
lib_path = os.getcwd() + "/../lib/backend"
sys.path.append( lib_path )
from util import Log
from database.database import Database
from database.web import Web
 

opt = "c:a:k:r:ov"
long_opt = ["config=","id=", "public key=", "id=", "overview", "verbose" ]
max_output_level = 2

def usage():
    print("Usage:", sys.argv[0], """[-c <database>| --config=<database>]
         \t [-a <id>| --a=<id>] 
         \t [-k <public key> --key=<public key>]
         \t [-r <id> | --remove=<>]
         \t [-o | --overview] """)

#def add(reg_id,reg_pubkey,database):
#        if(database == ""):
#            d = Database()
#        else:
#            d = Database(database)
#        add_a_web = Web(reg_id, reg_pubkey)
#        add_a_web.save()

     

#def get_conf():    
#    import configparser    
#    config = configparser.ConfigParser()
#    config.read('ctl_conf')
#    a_string = config.get('Essen','Gericht1')
#    print(a_string)

def main():
#    get_conf()  
    
    Log.streamoutput()
    reg_id = ""
    reg_pubkey = ""
    required = 0
    database = None
    try:
        opts, args = getopt.getopt(sys.argv[1:], opt, long_opt)
    except getopt.GetoptError as err:
        print(err)
        usage()
        sys.exit(2)
    output = None
    for o, a in opts:
        if o in ("-c", "--config"):
            import configparser
            config = configparser.ConfigParser()
            config.read(a)
            database = Database(config.get('Backend','Database'))
        elif o in ("-a", "--id"):
            reg_id = a
            if(reg_id == ""):
                Log.error("No valid id specified, Aborting ")
                exit(1)
            else:
                required += 1
                Log.info(" "+str(required)+" ")
                Log.debug("id " + str(a) + " was added to cluster ")
            print("id",o,a) 
        elif o in ("-k", "--public key"):
            reg_pubkey = a
            if(reg_pubkey == ""):  
                Log.error("No valid pub-key specified, Aborting ")
                exit(1)
            else:
                required += 1
                Log.info(" "+str(required)+" ")
                Log.info("public key" +  str(a) +" was added to cluster ") 
        elif o in ("-v", "--verbose"):
            Log.info("Verbosity increased")
            Log.increase_verbosity()
        elif o in ("-r", "--id"):
            print("id",o,a)
            logging.info(str(a) + "wir als id geloescht")
                    
        elif o in ("-o", "--o"):
            print("doxygen",o,a)           
            Log.info(str(a) + "wird zum doxygen gemacht")

    if(required != 2 ):
        Log.info(" " +str(required)+ " ")
        Log.error("no valid id or pubkey specified")
    else:
        add(reg_id,reg_pubkey,database)

if __name__ == "__main__":
    main()            
           




