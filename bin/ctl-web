#!/usr/bin/env python3
import os
import sys
import argparse

from util import Log
from database import Database
from database.database import NoSuchTable
from database import Web


def commit_settings(args):
    """ Sets the verbosity level & if nessesary it sets the user selected
    config file. 
    """
    Log.set_verbosity(args.verbose)
    if args.config:
        Database(args.config)
    else:
        Database()


def add(args):
    """ Adds a ctl-web frontend to the Database and grants it access to
        * ctl-webinteractive
    """
    web = Web.add({ 'c_id': args.url, 
            'c_pubkey': args.key})
    try:
        web.save()
    except NoSuchTable:
        web.create_table()
        web.save()


def remove(args):
    try:
        web = Web.get_exacly(args.url)
    except NoSuchTable:
        web = None
    if web:
        web.remove()
    else:
        Log.error('%s was not found in Database' % args.url)


def overview(args):
    webs = []
    try:
        webs = Web.get(args.timestamp)
    except NoSuchTable:
        users = []
    print()
    print('    Registred ctlweb frondends')
    print('--==============================--')
    print()
    if webs:
        print('%-35s | %-35s' % ('URL','Key'))
        print('-' * 73)
    elif args.timestamp:
        print('No ctlweb frondends in timerange added')
    else:
        print('No ctlweb frontends registered')

    for w in webs:
        print('%-35s | %-35s' % (w.c_id, w.c_pubkey))
        

def main():
    # General parsing
    parent_parser = argparse.ArgumentParser(add_help=False)
    parent_parser.add_argument('--config','-c',
            help='Own config file to be used')
    parent_parser.add_argument('--verbose','-v', 
            default=1,
            action='count',
            help='Increase output level')

    parser = argparse.ArgumentParser(
            description='Manages access for ctlweb frontends')
    subparser = parser.add_subparsers(help='Actions that can be done')
      ###############
     # ctl-web add #
    ###############
    add_parser = subparser.add_parser('add', 
            parents=[parent_parser],
            help='Grant access for ctlweb frontend. This command can also be'
            + ' used to change a ctlweb frontend.')
    add_parser.add_argument('url',
            metavar='URL',
            help='Url of the ctlweb frontend')
    add_parser.add_argument('--key','-k', required=True,
            help='Public key of the ctlweb frontend')
    add_parser.set_defaults(func=add)
      ##################
     # ctl-web remove #
    ##################
    remove_parser = subparser.add_parser('remove',
            parents=[parent_parser],
            help='Revoke access for ctlweb frontend')
    remove_parser.add_argument('url',
            metavar='URL',
            help='Url of the ctlweb frontend')
    remove_parser.set_defaults(func=remove)
      ####################
     # ctl-web overview #
    ####################
    overview_parser = subparser.add_parser('overview',
            parents=[parent_parser],
            help='View registered ctlweb frontends')
    overview_parser.add_argument('--timestamp','-t',
            help='Show only ctlweb frontends newer than timestamp')
    overview_parser.set_defaults(func=overview)
    # Workaround for Python 3.2-3.4 Issue #9694 'optional arguments'
    parser._optionals.title = 'options' 
    add_parser._optionals.title = 'options'
    remove_parser._optionals.title = 'options'

    args = parser.parse_args()
    commit_settings(args)
    args.func(args)

   
if __name__ == '__main__':
    main()            
           
