#!/usr/bin/env python3
import argparse

from database import Web
from database.database import NoSuchTable
from util import Log
from util.parsing import commit_settings
from util.parsing import parent_parser

# NICE TO HAVE: The first time a frontend connects, its IP is stored in tha
# database and used as a postfix for it's usernames


def add(args):
    """ Adds a ctl-web frontend to the Database and grants it access to
        * ctl-webinteractive
    """
    web = Web.add({'c_id': args.url,
                   'c_pubkey': args.key})
    try:
        web.save()
    except NoSuchTable:
        web.create_table()
        web.save()


def remove(args):
    try:
        web = Web.get_exactly(args.url)
    except NoSuchTable:
        web = None
    if web:
        web.remove()
    else:
        Log.error('%s was not found in Database' % args.url)


def overview(args):
    line_width = 79
    table_template = '%-35s| %42s'
    heading = 'Registred ctlweb frondends'.center(line_width)
    heading_sub = '--==============================--'.center(line_width)
    webs = []
    try:
        webs = Web.get(args.timestamp)
    except NoSuchTable:
        webs = []
    print()
    print(heading)
    print(heading_sub)
    print()
    if webs:
        print(table_template % ('URL', 'Key'))
        print('-' * line_width)
    elif args.timestamp:
        print('No ctlweb frondends in timerange added')
    else:
        print('No ctlweb frontends registered')

    for w in webs:
        pubkeys = [k.c_key for k in w.get_keys()]
        print(table_template % (w.c_id, ', '.join(pubkeys)))


def main():
    # General parsing
    parser = argparse.ArgumentParser(description='Manages access for ctlweb'
                                                 + ' frontends',
                                     parents=[parent_parser])
    subparser = parser.add_subparsers(help='Actions that can be done')
      ###############
     # ctl-web add #
    ###############
    add_parser = subparser.add_parser('add',
                                      parents=[parent_parser],
                                      help='Grant access for ctlweb frontend.'
                                           + ' This command can also be used'
                                           + ' to change a ctlweb frontend.')
    add_parser.add_argument('url',
                            metavar='URL',
                            help='Url of the ctlweb frontend')
    add_parser.add_argument('--key', '-k', required=True,
                            help='Public key of the ctlweb frontend')
    add_parser.set_defaults(func=add)
      ##################
     # ctl-web remove #
    ##################
    remove_parser = subparser.add_parser('remove',
                                         parents=[parent_parser],
                                         help='Revoke access for ctlweb'
                                              + ' frontend')
    remove_parser.add_argument('url',
                               metavar='URL',
                               help='Url of the ctlweb frontend')
    remove_parser.set_defaults(func=remove)
      ####################
     # ctl-web overview #
    ####################
    overview_parser = subparser.add_parser('overview',
                                           parents=[parent_parser],
                                           help='View registered ctlweb'
                                                + ' frontends')
    overview_parser.add_argument('--timestamp', '-t',
                                 help='Show only ctlweb frontends newer than'
                                      + ' timestamp')
    overview_parser.set_defaults(func=overview)
    # Workaround for Python 3.2-3.4 Issue #9694 'optional arguments'
    parser._optionals.title = 'options'
    add_parser._optionals.title = 'options'
    remove_parser._optionals.title = 'options'

    args = parser.parse_args()
    commit_settings(args)
    if 'func' in args:
        args.func(args)
    else:
        parser.print_help()


if __name__ == '__main__':
    main()
