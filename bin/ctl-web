#!/usr/bin/env python3
import os
import sys
import getopt

#ctl-web wird von der Webinstanz auf den Cluster ausgefuehrt, um sich dort zu verifiziern
lib_path = os.getcwd() + "/../lib/backend"
sys.path.append( lib_path )
from util import Log
from util.util import overview
from database import Database
from database import Web
 

opt = "c:a:k:r:ov"
long_opt = ["config=","id=", "public key=", "reg_id=", "overview", "verbose" ]
max_output_level = 2

def usage():
    print("Usage:", sys.argv[0], """[-c <database>| --config=<database>]
         \t [-a <id>| --a=<id>] 
         \t [-v | --verbose]  
         \t [-k <public key> --key=<public key>]
         \t [-r <reg_id> | --remove=<reg_id>]
         \t [-o | --overview] """)

def main():
   
    Log.streamoutput()
    reg_id = None
    reg_pubkey = None
    required = 0
    database = None
    add_set = None
    remove_set = None
    try:
        opts, args = getopt.getopt(sys.argv[1:], opt, long_opt)
    except getopt.GetoptError as err:
        print(err)
        usage()
        sys.exit(2)
    output = None
    for o, a in opts:
        if o in ("-c", "--config"):
            import configparser
            config = configparser.ConfigParser()
            config.read(a)
            database = Database(config.get('BACKEND','Database'))
        elif o in ("-a", "--add"):
            add_set = True
            if(a == None):
                Log.error("No valid id specified, Aborting ")
                exit(1)
            else:
                required += 1
                reg_id = a
                Log.info(" "+str(required)+" ")
                Log.debug("id " + str(a) + " was added to cluster ")
            print("id",o,a) 
        elif o in ("-k", "--public key"):
            if(a == None):  
                Log.error("No valid pub-key specified, Aborting ")
                exit(1)
            else:
                required += 1
                reg_pubkey = a
                Log.info(" "+str(required)+" ")
                Log.info("public key" +  str(a) +" was added to cluster ") 
        elif o in ("-v", "--verbose"):
            Log.info("Verbosity increased")
            Log.increase_verbosity()
        elif o in ("-r", "--remove"):
            remove_set = True
            if(a == None):
                Log.error(" No valid id specified, Aborting ")
                exit(1)
            else:
                required += 1
                reg_id = a
                print("pub_id",o,a)
                Log.info(str(a) + "wir als id geloescht")
        elif o in ("-o","--overview"):
            overview(a)
    if(add_set != remove_set ):            
        if(required != 2 ):
            Log.info(" " +str(required)+ " ")
            Log.error("no valid id or pubkey specified")
        else:
            if(add_set == True):
                Web.add({
                    "c_id": reg_id,
                    "c_pubkey": reg_pubkey,
                    })
            else:
                to_remove = Web.get_exacly(reg_id)
                to_remove.remove()
    else:
        Log.info("no add xor remove")
if __name__ == "__main__":
    main()            
           




