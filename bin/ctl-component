#!/usr/bin/env python3
import argparse

from util.log import Log
from util.parsing import commit_settings
from util.parsing import parent_parser
from database.database import NoSuchTable
from database import Component


def add(args):
    Component.add(args.package)


def remove(args):
    try:
        comp = Component.get_exactly(args.component)
    except NoSuchTable:
        comp = None
    if comp:
        comp.remove()
    else:
        Log.error('%s was not found in Database' % args.component)


def overview(args):
    line_width = 79
    table_template = '%-25s| %-52s'
    heading = 'Registered ctl components'.center(line_width)
    heading_sub = '--=============================--'.center(line_width)
    components = []
    try:
        components = Component.get(args.timestamp)
    except NoSuchTable:
        components = []
    print()
    print(heading)
    print(heading_sub)
    print()
    if components:
        print(table_template % ('Name', 'exe'))
        print('-' * line_width)
    elif args.timestamp:
        print('No ctl components where added in timerange.')
    else:
        print('No ctl components are registered.')

    for c in components:
        print(table_template % (c.c_id, c.c_exe))


def push(args):
    components = []
    try:
        components = Component.get(args.timestamp)
    except NoSuchTable:
        components = []
    if components:
        for c in components:
            Log.info('Uploading %s to %s' % (c.c_id, args.url))
            c.upload_to_web(args.url)
    else:
        Log.error('No components to upload')


def merge(args):
    from util.build_component import merge_components
    import os
    import shutil
    import tarfile
    with tarfile.open(args.component[0].name, 'r:gz') as first:
        with tarfile.open(args.component[1].name, 'r:gz') as second:
            output = merge_components(first, second)
    with open(output, 'rb') as src:
        shutil.copyfileobj(src, args.output)
    os.remove(output)


def main():
    parser = argparse.ArgumentParser(description='Manage ctl components.',
                                     parents=[parent_parser])
    subparser = parser.add_subparsers(help='Actions that can be done')
      #####################
     # ctl-component add #
    #####################
    add_parser = subparser.add_parser('add',
                                      parents=[parent_parser],
                                      help='Add a ctl component to database'
                                           + ' and storage.')
    add_parser.add_argument('package',
                            metavar='PACKAGE',
                            help='Ctl component package')
    add_parser.set_defaults(func=add)
      ########################
     # ctl-component remove #
    ########################
    remove_parser = subparser.add_parser('remove',
                                         parents=[parent_parser],
                                         help='Remove ctl component from'
                                              + ' database and storage.')
    remove_parser.add_argument('component',
                               metavar='COMPONENT',
                               help='Name of the registered component')
    remove_parser.set_defaults(func=remove)
      ##########################
     # ctl-component overview #
    ##########################
    overview_parser = subparser.add_parser('overview',
                                           parents=[parent_parser],
                                           help='View registered ctlweb'
                                                + ' users.')
    overview_parser.add_argument('--timestamp', '-t',
                                 help='Show only ctlweb components newer than'
                                      + ' timestamp')
    overview_parser.set_defaults(func=overview)
      ######################
     # ctl-component push #
    ######################
    push_parser = subparser.add_parser('push',
                                       parents=[parent_parser],
                                       help='Push ctl component to ctlweb'
                                            + ' frontend.')
    push_parser.add_argument('url',
                             metavar='URL',
                             help='Upload url')
    push_parser.add_argument('--timestamp', '-t',
                             help='Get only ctlweb components newer than'
                                  + ' timestamp')
    push_parser.set_defaults(func=push)
      #######################
     # ctl-component merge #
    #######################
    merge_parser = subparser.add_parser('merge',
                                        parents=[parent_parser],
                                        help='Merge two ctlweb components.')
    merge_parser.add_argument('component',
                              type=open,
                              nargs=2,
                              metavar="CTLWEB-COMPONENT",
                              help="ctlweb component file to be merged.")
    default_output = './merged.tgz'
    merge_parser.add_argument('-o', '--output',
                              type=argparse.FileType('wb'),
                              default='%s' % default_output,
                              help='Output file (default="%s")' %
                                   default_output)
    merge_parser.set_defaults(func=merge)
    # Workaround for Python 3.2-3.4 Issue #9694 'optional arguments'
    parser._optionals.title = 'options'

    args = parser.parse_args()
    commit_settings(args)
    if 'func' in args:
        args.func(args)
    else:
        parser.print_help()


if __name__ == "__main__":
    main()
